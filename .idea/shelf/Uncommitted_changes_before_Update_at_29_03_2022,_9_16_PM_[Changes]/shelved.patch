Index: KSI_Task/View Controller/HomeView.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n//  HomeView.swift\n//  KSI_Task\n//\n//  Created by Esraa on 27/03/2022.\n//\n\nimport UIKit\n\nclass HomeView: UIView {\n\n    // MARK: - Initializer\n    \n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        setupViews()\n    }\n\n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n\n\n\n//MARK: - Navigation Controller\n\n    let navigationTitleLabel: UILabel = {\n        let label = UILabel()\n        label.frame = CGRect(x: 0, y: 9, width: 60, height: 30)\n        label.text = \"مراسي\"\n        label.textColor = .white\n        label.textAlignment = .center\n        label.layer.borderWidth = 2.0\n        label.layer.borderColor = UIColor.white.cgColor\n        label.font = UIFont.cairoBlack(with: 13)\n        return label\n    }()\n\n    //MARK: - Container View\n\n    lazy var searchBar: UISearchBar = UISearchBar()\n\n    var scrollView: UIScrollView = {\n        var scrollview = UIScrollView()\n        scrollview.backgroundColor = .white\n        scrollview.isScrollEnabled = true\n        return scrollview\n    }()\n\n    /* used stack views to manage dynamic showing for collection views.\n     as stackView adjust its properities when view inside of it set to hidden */\n\n    var collectionViewsStackView: UIStackView = {\n       var containerView = UIStackView()\n        containerView.axis = .vertical\n        containerView.spacing = 0\n        containerView.distribution = .fill\n        containerView.backgroundColor = .lightGray\n        return containerView\n    }()\n\n    //MARK: - Main Section Offers\n\n    let mainSectionContainerView = MainSectionContainerView()\n\n\n    //MARK: - Month Offers Section\n\n    let monthOffersContainerView = MonthOffersContainerView()\n\n\n    //MARK: - Spectial and New Items Section\n\n    var spectialAndNewContainerView = SpectialAndNewContainerView()\n\n\n    //MARK: - End Of Season Offers Section\n\n    var seasonContainerView = SeasonContainerView()\n\n\n    //MARK: - Body Care Section\n\n    var bodyCareContainerView = BodyCareContainerView()\n\n    //MARK: - Trending Items Section\n\n    var trendingContainerView = TrendingContainerView()\n\n\n    //MARK: - Vitamins Section\n\n    var vitaminsContainerView = VitaminsContainerView()\n\n\n    //MARK: - Proteins and Supplements Section\n\n    var proteinsAndSupplementsContainerView = ProteinsAndSupplementsContainerView()\n\n\n    //MARK: - Soaps Section\n\n    var soapContainerView = SoapContainerView()\n\n    //MARK: - Makeup Section\n\n    var makeupContainerView = MakeupContainerView()\n\n\n    //MARK: - Gluten Free Section\n\n    lazy var glutenFreeCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .blue\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n\n\n    //MARK: - Hair care Section\n\n    var hairCareImageView: UIImageView = {\n        var imageView = UIImageView()\n        imageView.backgroundColor = .brown\n        return imageView\n    }()\n\n\n    lazy var hairCareCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .green\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n    //MARK: - Dried Fruit Section\n\n    lazy var driedFruitCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .blue\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n    //MARK: - Turkish Coffee Section\n\n    var turkishCoffeeImageView: UIImageView = {\n        var imageView = UIImageView()\n        imageView.backgroundColor = .brown\n        return imageView\n    }()\n\n\n    lazy var turkishCoffeeCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .green\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n    //MARK: - Scented Candles Section\n\n    lazy var scentedCandlesCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .blue\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n    //MARK: - Turkish Spices Section\n\n    var turkishSpicesImageView: UIImageView = {\n        var imageView = UIImageView()\n        imageView.backgroundColor = .brown\n        return imageView\n    }()\n\n\n    lazy var turkishSpicesCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .green\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n    //MARK: - Turkish Baklava Section\n\n    lazy var turkishBaklavaCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .blue\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n    //MARK: - Turkish Nuts Section\n\n\n    var turkishNutsImageView: UIImageView = {\n        var imageView = UIImageView()\n        imageView.backgroundColor = .brown\n        return imageView\n    }()\n\n\n    lazy var turkishNutsCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .green\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n    //MARK: - Coffee And Tea Machines Section\n\n    lazy var coffeeTeaMachinesCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .blue\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n    //MARK: - Turkish Divider Section\n\n    var turkishDividerImageView: UIImageView = {\n        var imageView = UIImageView()\n        imageView.backgroundColor = .brown\n        return imageView\n    }()\n\n    lazy var turkishDividerCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .yellow\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n    //MARK: - Masks Section\n\n    lazy var masksCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .blue\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n    //MARK: - Herbal Tea Section\n\n    lazy var herbalTeaCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .red\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n    //MARK: - Buying Offers Section\n\n    lazy var buyingOffersCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .blue\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n    //MARK: - Kitchen Tools Section\n\n    var kitchenToolsImageView: UIImageView = {\n        var imageView = UIImageView()\n        imageView.backgroundColor = .brown\n        return imageView\n    }()\n\n    lazy var kitchenToolsCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .yellow\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n    //MARK: - Diet Products Section\n\n    lazy var dietProductsCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .blue\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n    //MARK: - Brands Section\n\n    lazy var brandingCollectionView: UICollectionView =  {\n         let flowLayout = UICollectionViewFlowLayout()\n        flowLayout.scrollDirection = .horizontal\n        flowLayout.minimumLineSpacing = 12\n        flowLayout.minimumInteritemSpacing = 0\n        flowLayout.sectionInset = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 16)\n\n        let collectionView = UICollectionView(frame: self.bounds, collectionViewLayout: UICollectionViewFlowLayout.init())\n        collectionView.collectionViewLayout = flowLayout\n        collectionView.isUserInteractionEnabled = true\n        collectionView.backgroundColor = .green\n        collectionView.isScrollEnabled = true\n        return collectionView\n     }()\n\n\n\n    //MARK: - Setup Views\n\n    func setupViews(){\n        setupScrollView()\n    }\n\n\n    func setupScrollView(){\n        self.addSubview(scrollView)\n        scrollView.anchor(top: self.safeAreaLayoutGuide.topAnchor,\n                         leading: leadingAnchor,\n                          bottom: bottomAnchor,\n                         trailing: trailingAnchor,\n                         padding: .init(top: 0, left: 0, bottom: 0, right: 0))\n\n        scrollView.addSubview(searchBar)\n        searchBar.constrainHeight(constant: 60)\n        searchBar.anchor(top: scrollView.topAnchor,\n                         leading: leadingAnchor,\n                         bottom: nil,\n                         trailing: trailingAnchor,\n                         padding: .init(top: 0, left: 0, bottom: 0, right: 0))\n\n        scrollView.addSubview(collectionViewsStackView)\n        collectionViewsStackView.anchor(top: searchBar.bottomAnchor,\n                         leading: leadingAnchor,\n                         bottom:  nil,\n                         trailing: trailingAnchor,\n                         padding: .init(top: 0, left: 0, bottom: 0, right: 0))\n\n        collectionViewsStackView.addArrangedSubviews([mainSectionContainerView,\n                                                      monthOffersContainerView,\n                                                      spectialAndNewContainerView,\n                                                      seasonContainerView,\n                                                      bodyCareContainerView,\n                                                      \n                                                      trendingContainerView,\n                                                     vitaminsContainerView,\n                                                      proteinsAndSupplementsContainerView,\n                                                      \n                                                     soapContainerView,\n                                                      mainSectionContainerView,\n\n                                                     glutenFreeCollectionView,\n                                                     hairCareImageView,\n                                                     driedFruitCollectionView,\n                                                     turkishCoffeeImageView,\n                                                     scentedCandlesCollectionView,\n                                                     turkishSpicesImageView,\n                                                      turkishBaklavaCollectionView,\n                                                     turkishNutsImageView,\n                                                      coffeeTeaMachinesCollectionView,\n                                                      turkishDividerImageView,\n                                                      masksCollectionView,\n                                                     herbalTeaCollectionView,\n                                                     buyingOffersCollectionView,\n                                                     kitchenToolsImageView,\n                                                     dietProductsCollectionView,\n                                                     brandingCollectionView])\n\n\n        mainSectionContainerView.constrainHeight(constant: 300)\n        monthOffersContainerView.constrainHeight(constant: 300)\n        spectialAndNewContainerView.constrainHeight(constant: 300)\n        seasonContainerView.constrainHeight(constant: 300)\n        bodyCareContainerView.constrainHeight(constant: 400)\n\n\n        trendingContainerView.constrainHeight(constant: 300)\n        vitaminsContainerView.constrainHeight(constant: 300)\n\n        proteinsAndSupplementsContainerView.constrainHeight(constant: 400)\n\n        soapContainerView.constrainHeight(constant: 300)\n        makeupContainerView.constrainHeight(constant: 400)\n\n\n        glutenFreeCollectionView.constrainHeight(constant: 300)\n\n\n        hairCareImageView.constrainHeight(constant: 200)\n\n        driedFruitCollectionView.constrainHeight(constant: 300)\n\n\n        turkishCoffeeImageView.constrainHeight(constant: 200)\n\n\n        scentedCandlesCollectionView.constrainHeight(constant: 300)\n\n\n        turkishSpicesImageView.constrainHeight(constant: 200)\n\n        turkishBaklavaCollectionView.constrainHeight(constant: 300)\n\n\n        turkishNutsImageView.constrainHeight(constant: 200)\n\n\n        coffeeTeaMachinesCollectionView.constrainHeight(constant: 300)\n\n\n        turkishDividerImageView.constrainHeight(constant: 200)\n\n\n        masksCollectionView.constrainHeight(constant: 300)\n\n\n        herbalTeaCollectionView.constrainHeight(constant: 300)\n\n        buyingOffersCollectionView.constrainHeight(constant: 300)\n\n        kitchenToolsImageView.constrainHeight(constant: 200)\n\n        dietProductsCollectionView.constrainHeight(constant: 300)\n\n        brandingCollectionView.constrainHeight(constant: 250)\n    }\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/KSI_Task/View Controller/HomeView.swift b/KSI_Task/View Controller/HomeView.swift
--- a/KSI_Task/View Controller/HomeView.swift	(revision 1555d72745f61c8df8129ef4ccc945112649202d)
+++ b/KSI_Task/View Controller/HomeView.swift	(date 1648581314321)
@@ -51,12 +51,11 @@
      as stackView adjust its properities when view inside of it set to hidden */
 
     var collectionViewsStackView: UIStackView = {
-       var containerView = UIStackView()
-        containerView.axis = .vertical
-        containerView.spacing = 0
-        containerView.distribution = .fill
-        containerView.backgroundColor = .lightGray
-        return containerView
+       var stackView = UIStackView()
+        stackView.axis = .vertical
+        stackView.spacing = 0
+        stackView.distribution = .fill
+        return stackView
     }()
 
     //MARK: - Main Section Offers
Index: KSI_Task/Extensions/String + StrikeThrough.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/KSI_Task/Extensions/String + StrikeThrough.swift b/KSI_Task/Extensions/String + StrikeThrough.swift
new file mode 100644
--- /dev/null	(date 1648577338266)
+++ b/KSI_Task/Extensions/String + StrikeThrough.swift	(date 1648577338266)
@@ -0,0 +1,23 @@
+//
+//  String + StrikeThrough.swift
+//  KSI_Task
+//
+//  Created by Esraa on 29/03/2022.
+//
+
+import Foundation
+import UIKit
+
+
+extension String {
+
+    func strikeThrough() -> NSMutableAttributedString {
+
+        let attributedText = NSMutableAttributedString(
+            string: self,
+            attributes: [.strikethroughStyle: NSUnderlineStyle.single.rawValue]
+        )
+        return attributedText
+    }
+
+}
